{"ast":null,"code":"var _jsxFileName = \"/home/junaid_dev/djangoproj/frontend/src/components/TweetComposer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TweetComposer = () => {\n  _s();\n  const [tweetContent, setTweetContent] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tweets, setTweets] = useState([{\n    id: 1,\n    content: \"Hello, this is my first tweet\",\n    likeCount: 0\n  }\n  // Add other tweets here\n  ]);\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  const fetchTweets = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/tweets/\");\n      setTweets(response.data);\n    } catch (error) {\n      console.error(\"Error fetching tweets:\", error);\n    }\n  };\n  const handleInputChange = e => {\n    setTweetContent(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const handleToken = () => {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          console.error(\"Token not found\");\n          return;\n        }\n        try {\n          const decodedToken = jwtDecode(token);\n          console.log(\"Decoded token:\", decodedToken);\n        } catch (error) {\n          console.error(\"Error decoding token:\", error);\n        }\n      };\n\n      // handleToken();\n      console.log(tweetContent);\n      const response = await axios({\n        method: 'post',\n        url: 'http://127.0.0.1:8000/tweets/',\n        data: {\n          content: tweetContent,\n          user: 1,\n          is_liked: false,\n          comment: 'hello'\n        }\n      });\n      console.log(\"Tweet created:\", response.data);\n      setTweets([...tweets, response.data]); // Add newly created tweet to the list\n    } catch (error) {\n      console.error(\"Error creating tweet:\", error);\n      setError(\"An error occurred while creating the tweet.\");\n    } finally {\n      setLoading(false);\n      setTweetContent(\"\");\n    }\n  };\n  const handleLike = tweetId => {\n    setTweets(prevTweets => prevTweets.map(tweet => tweet.id === tweetId ? {\n      ...tweet,\n      likeCount: tweet.likeCount + 1\n    } : tweet));\n  };\n\n  // const handleDislike = (tweetId) => {\n  //   setDislikes(dislikes + 1);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweet\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Compose a Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: tweetContent,\n        onChange: handleInputChange,\n        placeholder: \"What's happening?\",\n        rows: 4,\n        cols: 50,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Posting...\" : \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tweets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: tweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLike(tweet.id),\n            children: [\"Like (\", tweet.likeCount, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, tweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(TweetComposer, \"CrxvbIcP/ZcuyI3FfVIg+a/QvEQ=\");\n_c = TweetComposer;\nexport default TweetComposer;\nvar _c;\n$RefreshReg$(_c, \"TweetComposer\");","map":{"version":3,"names":["React","useState","useEffect","axios","jwtDecode","jsxDEV","_jsxDEV","TweetComposer","_s","tweetContent","setTweetContent","loading","setLoading","error","setError","tweets","setTweets","id","content","likeCount","fetchTweets","response","get","data","console","handleInputChange","e","target","value","handleSubmit","preventDefault","handleToken","token","localStorage","getItem","decodedToken","log","method","url","user","is_liked","comment","handleLike","tweetId","prevTweets","map","tweet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","rows","cols","disabled","type","onClick","_c","$RefreshReg$"],"sources":["/home/junaid_dev/djangoproj/frontend/src/components/TweetComposer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\n\n\nconst TweetComposer = () => {\n  const [tweetContent, setTweetContent] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tweets, setTweets] = useState([\n    { id: 1, content: \"Hello, this is my first tweet\", likeCount: 0 },\n  // Add other tweets here\n  ]);\n\n\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n\n  const fetchTweets = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/tweets/\");\n      setTweets(response.data);\n    } catch (error) {\n      console.error(\"Error fetching tweets:\", error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setTweetContent(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n  \n    try {\n      const handleToken = () => {\n        const token = localStorage.getItem(\"token\");\n      \n        if (!token) {\n          console.error(\"Token not found\");\n          return;\n        }\n      \n        try {\n          const decodedToken = jwtDecode(token);\n          console.log(\"Decoded token:\", decodedToken);\n        } catch (error) {\n          console.error(\"Error decoding token:\", error);\n        }\n      };\n      \n      // handleToken();\n      console.log(tweetContent);\n      const response = await axios({\n        method: 'post',\n        url: 'http://127.0.0.1:8000/tweets/',\n        data: {\n          content: tweetContent,\n          user: 1,\n          is_liked: false,\n          comment: 'hello'\n        }\n      });\n      console.log(\"Tweet created:\", response.data);\n      setTweets([...tweets, response.data]); // Add newly created tweet to the list\n    } catch (error) {\n      console.error(\"Error creating tweet:\", error);\n      setError(\"An error occurred while creating the tweet.\");\n    } finally {\n      setLoading(false);\n      setTweetContent(\"\");\n    }\n  };\n  const handleLike = (tweetId) => {\n    setTweets((prevTweets) =>\n      prevTweets.map((tweet) =>\n        tweet.id === tweetId ? { ...tweet, likeCount: tweet.likeCount + 1 } : tweet\n      )\n    );\n  };\n\n\n  // const handleDislike = (tweetId) => {\n  //   setDislikes(dislikes + 1);\n  // };\n\n  return (\n    <div className=\"tweet\">\n      <h2>Compose a Tweet</h2>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={tweetContent}\n          onChange={handleInputChange}\n          placeholder=\"What's happening?\"\n          rows={4}\n          cols={50}\n          disabled={loading}\n        />\n        <button className=\"post\" type=\"submit\" disabled={loading}>\n          {loading ? \"Posting...\" : \"Post\"}\n        </button>\n      </form>\n      {error && <p>{error}</p>}\n      <h2>Tweets</h2>\n      <ul>\n        {tweets.map((tweet) => (\n          <li key={tweet.id}>\n            <div>\n              <span>{tweet.content}</span>\n              <button onClick={() => handleLike(tweet.id)}>Like ({tweet.likeCount})</button>\n              {/* <button onClick={handleDislike}>Dislike ({dislikes})</button> */}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TweetComposer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}