{"ast":null,"code":"// import React, { useState } from \"react\";\n// import cancel from '../components/images/cancel.jpg';\n// import black_x from \"../components/images/black_x.jpg\";\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate from React Router\n\n// const CreateUser = () => {\n\n//   const navigate = useNavigate(); // Initialize navigate\n//   const [formData, setFormData] = useState({\n//     username: '',\n//     email: '',\n//     password: ''\n//   });\n\n//   const [user, setUser] = useState({\n//     username: \"\",\n//     password: \"\",\n//     month: \"\",\n//     date: \"\",\n//     year: \"\"\n//   });\n\n//   const currentYear = new Date().getFullYear();\n\n//   const handleChange = event => {\n//     setFormData({\n//       ...formData,\n//       [event.target.name]: event.target.value\n//     });\n//   };\n\n//   const handleUserChange = (e) => {\n//     const { name, value } = e.target;\n//     setUser((prev) => ({\n//       ...prev,\n//       [name]: value\n//     }));\n//   };\n\n//   const handleSubmit = async event => {\n//     event.preventDefault();\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/users/', formData);\n//       console.log(response.data);\n//       // Optionally, handle the response\n//       navigate('/signin'); // Redirect to /signin\n\n//     } catch (error) {\n//       console.error('Error creating user:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"logo_create\">\n//       <div className=\"cross\">\n//         <a href=\"/public\">\n//           <img height=\"10px\" width=\"10px\" src={cancel} alt=\"cancel\" />\n//         </a>\n//       </div>\n//       <div className=\"nav_1\">\n//         <div>\n//           <img\n//             height=\"60px\"\n//             width=\"60px\"\n//             className=\"x-mark\"\n//             src={black_x}\n//             alt=\"x-mark\"\n//           />\n//         </div>\n//         <h2>Create your account</h2>\n//         <form onSubmit={handleSubmit} className=\"forms_fields\">\n//           <input\n//             className=\"box_1\"\n//             type=\"text\"\n//             name=\"username\"\n//             value={formData.username}\n//             onChange={handleChange}\n//             placeholder=\"Name\"\n//             maxLength=\"50\"\n//           />\n//           <input\n//             className=\"box_1\"\n//             type=\"text\"\n//             name=\"email\"\n//             value={formData.email}\n//             onChange={handleChange}\n//             placeholder=\"Email\"\n//           />\n//           <input\n//             className=\"box_1\"\n//             type=\"password\"\n//             name=\"password\"\n//             value={formData.password}\n//             onChange={handleChange}\n//             placeholder=\"Password\"\n//             maxLength=\"20\"\n//           />\n//           <div  className=\".line\">\n//             <div>Use Email Instead</div>\n//           </div>\n//           <div className=\"dob\">Date of Birth</div>\n//           <div>This will not be shown publicly. Confirm your own age, even if this account is for a business, a pet, or something else.</div>\n//           <div className=\"all_boxes\">\n//             <div className=\"box_A month\"></div>\n//             <div className=\"box_A date\">\n//               <label>Date</label>\n//               <select value={user.date} onChange={handleUserChange} name=\"date\" className=\"select\">\n//                 {/* Generate options for dates from 01 to 30 */}\n//                 {Array.from({ length: 30 }, (_, index) => {\n//                   const day = index + 1;\n//                   const formattedDay = day < 10 ? `0${day}` : `${day}`; // Add leading zero if day is less than 10\n//                   return (\n//                     <option key={formattedDay} value={formattedDay}>{formattedDay}</option>\n//                   );\n//                 })}\n//               </select>\n//             </div>\n//             <div className=\"box_A year\">\n//               <label>Year</label>\n//               <select name=\"year\" value={user.year} onChange={handleUserChange} className=\"select\">\n//                 {/* Generate options for years from 1980 to current year */}\n//                 {Array.from({ length: currentYear - 1980 + 1 }, (_, index) => {\n//                   const year = 1980 + index;\n//                   return (\n//                     <option key={year} value={year}>{year}</option>\n//                   );\n//                 })}\n//               </select>\n//             </div>\n//           </div>\n//           <button className=\"Nex\" type=\"submit\">Next</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default CreateUser;","map":{"version":3,"names":[],"sources":["/home/junaid_dev/djangoproj/frontend/src/components/Create.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import cancel from '../components/images/cancel.jpg';\n// import black_x from \"../components/images/black_x.jpg\";\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate from React Router\n\n// const CreateUser = () => {\n\n//   const navigate = useNavigate(); // Initialize navigate\n//   const [formData, setFormData] = useState({\n//     username: '',\n//     email: '',\n//     password: ''\n//   });\n\n//   const [user, setUser] = useState({\n//     username: \"\",\n//     password: \"\",\n//     month: \"\",\n//     date: \"\",\n//     year: \"\"\n//   });\n\n//   const currentYear = new Date().getFullYear();\n\n//   const handleChange = event => {\n//     setFormData({\n//       ...formData,\n//       [event.target.name]: event.target.value\n//     });\n//   };\n\n//   const handleUserChange = (e) => {\n//     const { name, value } = e.target;\n//     setUser((prev) => ({\n//       ...prev,\n//       [name]: value\n//     }));\n//   };\n\n//   const handleSubmit = async event => {\n//     event.preventDefault();\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/users/', formData);\n//       console.log(response.data);\n//       // Optionally, handle the response\n//       navigate('/signin'); // Redirect to /signin\n\n//     } catch (error) {\n//       console.error('Error creating user:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"logo_create\">\n//       <div className=\"cross\">\n//         <a href=\"/public\">\n//           <img height=\"10px\" width=\"10px\" src={cancel} alt=\"cancel\" />\n//         </a>\n//       </div>\n//       <div className=\"nav_1\">\n//         <div>\n//           <img\n//             height=\"60px\"\n//             width=\"60px\"\n//             className=\"x-mark\"\n//             src={black_x}\n//             alt=\"x-mark\"\n//           />\n//         </div>\n//         <h2>Create your account</h2>\n//         <form onSubmit={handleSubmit} className=\"forms_fields\">\n//           <input\n//             className=\"box_1\"\n//             type=\"text\"\n//             name=\"username\"\n//             value={formData.username}\n//             onChange={handleChange}\n//             placeholder=\"Name\"\n//             maxLength=\"50\"\n//           />\n//           <input\n//             className=\"box_1\"\n//             type=\"text\"\n//             name=\"email\"\n//             value={formData.email}\n//             onChange={handleChange}\n//             placeholder=\"Email\"\n//           />\n//           <input\n//             className=\"box_1\"\n//             type=\"password\"\n//             name=\"password\"\n//             value={formData.password}\n//             onChange={handleChange}\n//             placeholder=\"Password\"\n//             maxLength=\"20\"\n//           />\n//           <div  className=\".line\">\n//             <div>Use Email Instead</div>\n//           </div>\n//           <div className=\"dob\">Date of Birth</div>\n//           <div>This will not be shown publicly. Confirm your own age, even if this account is for a business, a pet, or something else.</div>\n//           <div className=\"all_boxes\">\n//             <div className=\"box_A month\"></div>\n//             <div className=\"box_A date\">\n//               <label>Date</label>\n//               <select value={user.date} onChange={handleUserChange} name=\"date\" className=\"select\">\n//                 {/* Generate options for dates from 01 to 30 */}\n//                 {Array.from({ length: 30 }, (_, index) => {\n//                   const day = index + 1;\n//                   const formattedDay = day < 10 ? `0${day}` : `${day}`; // Add leading zero if day is less than 10\n//                   return (\n//                     <option key={formattedDay} value={formattedDay}>{formattedDay}</option>\n//                   );\n//                 })}\n//               </select>\n//             </div>\n//             <div className=\"box_A year\">\n//               <label>Year</label>\n//               <select name=\"year\" value={user.year} onChange={handleUserChange} className=\"select\">\n//                 {/* Generate options for years from 1980 to current year */}\n//                 {Array.from({ length: currentYear - 1980 + 1 }, (_, index) => {\n//                   const year = 1980 + index;\n//                   return (\n//                     <option key={year} value={year}>{year}</option>\n//                   );\n//                 })}\n//               </select>\n//             </div>\n//           </div>\n//           <button className=\"Nex\" type=\"submit\">Next</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default CreateUser;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}