{"ast":null,"code":"var _jsxFileName = \"/home/junaid_dev/djangoproj/frontend/src/components/EditUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EditUser from './EditUser'; // Import EditUser component\nimport { users } from './users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [selectedUserId, setSelectedUserId] = useState(null); // State to store selected user ID\n\n  // Function to handle edit button click\n  const handleEdit = userId => {\n    setSelectedUserId(userId); // Set the selected user ID\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), \" \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), \" \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(user.id),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)), selectedUserId && /*#__PURE__*/_jsxDEV(EditUser, {\n      userId: selectedUserId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"XgWC7K+UW7JnvJKTIvHgHgmCH6M=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","EditUser","users","jsxDEV","_jsxDEV","UserList","_s","selectedUserId","setSelectedUserId","handleEdit","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","username","email","onClick","id","_c","$RefreshReg$"],"sources":["/home/junaid_dev/djangoproj/frontend/src/components/EditUser.js"],"sourcesContent":["import React, { useState } from 'react';\nimport EditUser from './EditUser'; // Import EditUser component\nimport { users } from './users';\n\nconst UserList = () => {\n  const [selectedUserId, setSelectedUserId] = useState(null); // State to store selected user ID\n\n  // Function to handle edit button click\n  const handleEdit = userId => {\n    setSelectedUserId(userId); // Set the selected user ID\n  };\n\n  return (\n    <div>\n      <h1>User List</h1>\n      {/* Assuming you have a list of users */}\n      {users.map(user => (\n        <div key={user.id}>\n          <div>\n            <strong>Username:</strong> {user.username}\n          </div>\n          <div>\n            <strong>Email:</strong> {user.email}\n          </div>\n          {/* Edit button for each user */}\n          <button onClick={() => handleEdit(user.id)}>Edit</button>\n        </div>\n      ))}\n      {/* Pass selectedUserId to EditUser component */}\n      {selectedUserId && <EditUser userId={selectedUserId} />}\n    </div>\n  );\n};\n\nexport default UserList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AACnC,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAMS,UAAU,GAAGC,MAAM,IAAI;IAC3BF,iBAAiB,CAACE,MAAM,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEjBb,KAAK,CAACc,GAAG,CAACC,IAAI,iBACbb,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAAO,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACC,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACNX,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAAO,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACE,KAAK;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eAENX,OAAA;QAAQgB,OAAO,EAAEA,CAAA,KAAMX,UAAU,CAACQ,IAAI,CAACI,EAAE,CAAE;QAAAV,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GARjDE,IAAI,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASZ,CACN,CAAC,EAEDR,cAAc,iBAAIH,OAAA,CAACH,QAAQ;MAACS,MAAM,EAAEH;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAACT,EAAA,CA5BID,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}