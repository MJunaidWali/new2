{"ast":null,"code":"var _jsxFileName = \"/home/junaid_dev/twitter clone/frontend/src/components/Users.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [newUser, setNewUser] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    // Assuming password field is required\n    is_staff: false,\n    // Assuming boolean values for is_staff and is_active\n    is_active: false\n  });\n\n  // Fetch users on component mount\n  useEffect(() => {\n    const fetchUsers = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/users/\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n        setError(\"Error fetching users. Please try again later.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  // Handle creating a new user\n  const handleCreateUser = async event => {\n    event.preventDefault(); // Prevent default form submission behavior\n\n    // Add validation logic here (optional)\n\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/users/\", newUser); // Assuming POST request for creation\n      const createdUser = response.data; // Handle response from backend\n      // Update the UI to reflect the newly created user\n      setData([...data, createdUser]); // Add new user to data array\n      setNewUser({\n        username: \"\",\n        email: \"\",\n        password: \"\"\n      }); // Reset new user form\n    } catch (error) {\n      console.error(\"Error creating user:\", error);\n      setError(\"Error creating user. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Existing Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading users...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) // Display loading message while fetching\n    : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) // Display error message with styling\n    : data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.username, \" - \", user.email, /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Update user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, user.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateUser,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: newUser.username,\n          onChange: e => setNewUser({\n            ...newUser,\n            username: e.target.value\n          }),\n          required: true // Add validation for required fields\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: newUser.email,\n          onChange: e => setNewUser({\n            ...newUser,\n            email: e.target.value\n          }),\n          required: true // Add validation for required fields\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\" // Use password type for security\n          ,\n          id: \"password\",\n          name: \"password\",\n          value: newUser.password,\n          onChange: e => setNewUser({\n            ...newUser,\n            password: e.target.value\n          }),\n          required: true // Add validation for required fields\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"is_staff\",\n            name: \"is_staff\",\n            checked: newUser.is_staff,\n            onChange: e => setNewUser({\n              ...newUser,\n              is_staff: e.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), \"Is Staff\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"is_active\",\n            name: \"is_active\",\n            checked: newUser.is_active,\n            onChange: e => setNewUser({\n              ...newUser,\n              is_active: e.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), \"Is Active\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"N/LlM1peZ7x1+mgDGIc97hyuTWU=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Users","_s","data","setData","error","setError","isLoading","setIsLoading","newUser","setNewUser","username","email","password","is_staff","is_active","fetchUsers","response","get","console","handleCreateUser","event","preventDefault","post","createdUser","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","user","user_id","onSubmit","htmlFor","type","id","name","value","onChange","e","target","required","checked","_c","$RefreshReg$"],"sources":["/home/junaid_dev/twitter clone/frontend/src/components/Users.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Users = () => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [newUser, setNewUser] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\", // Assuming password field is required\n    is_staff: false, // Assuming boolean values for is_staff and is_active\n    is_active: false,\n  });\n\n  // Fetch users on component mount\n  useEffect(() => {\n    const fetchUsers = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/users/\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n        setError(\"Error fetching users. Please try again later.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  // Handle creating a new user\n  const handleCreateUser = async (event) => {\n    event.preventDefault(); // Prevent default form submission behavior\n\n    // Add validation logic here (optional)\n\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/users/\", newUser); // Assuming POST request for creation\n      const createdUser = response.data; // Handle response from backend\n      // Update the UI to reflect the newly created user\n      setData([...data, createdUser]); // Add new user to data array\n      setNewUser({ username: \"\", email: \"\", password: \"\" }); // Reset new user form\n    } catch (error) {\n      console.error(\"Error creating user:\", error);\n      setError(\"Error creating user. Please try again later.\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Existing Users</h1>\n      {isLoading ? (\n        <p>Loading users...</p> // Display loading message while fetching\n      ) : error ? (\n        <p className=\"error\">{error}</p> // Display error message with styling\n      ) : data ? (\n        <div>\n          <ul>\n            {data.map((user) => (\n              <li key={user.user_id}>\n                {user.username} - {user.email}\n                <button >Update user</button>\n              </li>\n            ))}\n          </ul>\n          <h2>Create User</h2>\n          <form onSubmit={handleCreateUser}>\n            <label htmlFor=\"username\">Username:</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              value={newUser.username}\n              onChange={(e) => setNewUser({ ...newUser, username: e.target.value })}\n              required // Add validation for required fields\n            />\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={newUser.email}\n              onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\n              required // Add validation for required fields\n            />\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              type=\"password\" // Use password type for security\n              id=\"password\"\n              name=\"password\"\n              value={newUser.password}\n              onChange={(e) => setNewUser({ ...newUser, password: e.target.value })}\n              required // Add validation for required fields\n            />\n            <label>\n              <input\n                type=\"checkbox\"\n                id=\"is_staff\"\n                name=\"is_staff\"\n                checked={newUser.is_staff}\n                onChange={(e) => setNewUser({ ...newUser, is_staff: e.target.checked })}\n              />\n              Is Staff\n            </label>\n            <label>\n              <input\n                type=\"checkbox\"\n                id=\"is_active\"\n                name=\"is_active\"\n                checked={newUser.is_active}\n                onChange={(e) => setNewUser({ ...newUser, is_active: e.target.checked })}\n              />\n              Is Active\n            </label>\n            <button type=\"submit\">Create User</button>\n          </form>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Users;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}